{"pageProps":{"note":{"id":"d2Mw1WWZ2RpIbaGwpgEie","title":"Supertest","desc":"","updated":1642309274724,"created":1642224964338,"custom":{},"fname":"Testing.Supertest","type":"note","vault":{"fsPath":"vault"},"contentHash":"f76f4344a3b23b9721ef33fc7d582f0d","links":[{"type":"wiki","from":{"fname":"Testing.Supertest","id":"d2Mw1WWZ2RpIbaGwpgEie","vaultName":"vault"},"value":"Testing","alias":"Back","position":{"start":{"line":75,"column":1,"offset":2106},"end":{"line":75,"column":17,"offset":2122},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"Testing"}},{"from":{"fname":"Testing","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":4,"offset":39},"end":{"line":5,"column":35,"offset":70},"indent":[]},"value":"Testing.Supertest","alias":"Supertest"}],"anchors":{"installation":{"type":"header","text":"Installation","value":"installation","line":12,"column":0,"depth":3},"setup":{"type":"header","text":"Setup","value":"setup","line":16,"column":0,"depth":3},"api-guide":{"type":"header","text":"API Guide","value":"api-guide","line":46,"column":0,"depth":3}},"children":[],"parent":"Te2jPQSZKapqVSsNhw7jA","data":{}},"body":"<h1 id=\"supertest\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#supertest\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Supertest</h1>\n<p>Super test is used in conjunction with JEST or on it's own to test http requests.</p>\n<ul>\n<li>once installed, it can be used and referenced by calling <code>require('supertest')</code></li>\n</ul>\n<h3 id=\"installation\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#installation\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Installation</h3>\n<p><code>npm install supertest</code></p>\n<h3 id=\"setup\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#setup\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Setup</h3>\n<ul>\n<li>create normal expres app</li>\n<li>be sure to create <code>__tests__</code> folder, this seems to be what JEST needs to run testing. (You can run supertest without jest but issues are reported in normal error messages as opposed to jest style message).</li>\n<li>create a file with the convention <code>(FILENAME).test.js</code></li>\n<li>if testing expres, export the app component\n<code>export const app = express();</code></li>\n<li>import app object into test.js file <code>const { app } = require('../../dist/src/index.js');</code></li>\n<li>sample app using supertest with no test suites</li>\n</ul>\n<pre class=\"language-const\"><code class=\"language-const\">const assert = require('assert');\nconst express = require('express');\n\nconst app = express();\n\napp.get('/user', function(req, res) {\n  res.status(200).json({ name: 'john' });\n});\n\nrequest(app)\n  .get('/user')\n  .expect('Content-Type', /json/)\n  .expect('Content-Length', '15')\n  .expect(200)\n  .end(function(err, res) {\n    if (err) throw err;\n  });\n</code></pre>\n<h3 id=\"api-guide\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#api-guide\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>API Guide</h3>\n<p>API\nYou may use any superagent methods, including .write(), .pipe() etc and perform assertions in the .end() callback for lower-level needs.</p>\n<ul>\n<li>\n<p><strong>.expect(status[, fn])</strong>\nAssert response status code.</p>\n</li>\n<li>\n<p><strong>.expect(status, body[, fn])</strong>\nAssert response status code and body.</p>\n</li>\n<li>\n<p><strong>.expect(body[, fn])</strong>\nAssert response body text with a string, regular expression, or parsed body object.</p>\n</li>\n<li>\n<p><strong>.expect(field, value[, fn])</strong>\nAssert header field value with a string or regular expression.</p>\n</li>\n<li>\n<p><strong>.expect(function(res) {})</strong>\nPass a custom assertion function. It'll be given the response object to check. If the check fails, throw an error.</p>\n</li>\n</ul>\n<pre><code>request(app)\n  .get('/')\n  .expect(hasPreviousAndNextKeys)\n  .end(done);\n\nfunction hasPreviousAndNextKeys(res) {\n  if (!('next' in res.body)) throw new Error(\"missing next key\");\n  if (!('prev' in res.body)) throw new Error(\"missing prev key\");\n}\n</code></pre>\n<ul>\n<li><strong>.end(fn)</strong>\nPerform the request and invoke fn(err, res).</li>\n</ul>\n<p><a href=\"/My-Dendron-Notes/notes/Te2jPQSZKapqVSsNhw7jA\">Back</a></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/My-Dendron-Notes/notes/Te2jPQSZKapqVSsNhw7jA\">Testing</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"Root","desc":"","updated":1649446047937,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"507d4dbcd7bf14ced7918d640729fe22","links":[{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"user.binarystag","alias":"@binarystag","position":{"start":{"line":2,"column":13,"offset":13},"end":{"line":2,"column":24,"offset":24},"indent":[]},"xvault":false,"to":{"fname":"user.binarystag"}}],"anchors":{"my-notes-binarystag":{"type":"header","text":"My notes (@binarystag)","value":"my-notes-binarystag","line":8,"column":0,"depth":1},"sections":{"type":"header","text":"Sections:","value":"sections","line":13,"column":0,"depth":3}},"children":["8fw4xwe5s296cc697g6wdal","tg693e9l5g77psni6defy6h","NUz98ls1bdGed4HXQ0Z4C","Mhv0wNqRgu2h7j3Ws71eo","Te2jPQSZKapqVSsNhw7jA","m41bS3zCQX1qEK2y2GD03","root"],"parent":null,"data":{},"body":"\n# My notes (@binarystag)\n\n[LinkedIn](https://www.linkedin.com/in/aaron-deas-ba9908166/)\n[Github](https://github.com/b00000001)\n\n### Sections:\n\n1. [TypeScript](./Typescript.md)\n2. [Testing](./Testing)\n3. [Database](./Database)\n4. [Gaming](./Gaming)\n5. [Data Structures](./Data_Structures)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.83.0","enableEditorDecorations":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/My-Dendron-Notes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://b00000001.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}